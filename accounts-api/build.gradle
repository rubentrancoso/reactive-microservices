buildscript {
	ext {
		springBootVersion = '2.0.0.M7'
	}
	repositories {
		mavenCentral()
		maven { url "https://repo.spring.io/snapshot" }
		maven { url "https://repo.spring.io/milestone" }	
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath('se.transmode.gradle:gradle-docker:1.2')
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'application'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'docker'

group = 'com.company.ms'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
targetCompatibility = 1.8
mainClassName = 'com.company.ms.accounts.Application'

repositories {
	mavenCentral()
	maven { url "https://repo.spring.io/snapshot" }
	maven { url "https://repo.spring.io/milestone" }	
}

configurations {
    all*.exclude module : 'spring-boot-starter-logging'
    dev
}

dependencies {
	compile("org.springframework.boot:spring-boot-starter-webflux")
	compileOnly('org.projectlombok:lombok:1.16.18')
	compile('org.springframework.boot:spring-boot-starter-actuator')
	compile('org.springframework.boot:spring-boot-starter-log4j2')
	compile('org.springframework.boot:spring-boot-starter-data-cassandra-reactive')
	compile('io.netty:netty-transport-native-epoll:4.1.9.Final:linux-x86_64')
	dev('org.springframework.boot:spring-boot-devtools')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('org.apache.httpcomponents:httpclient')
	testCompile('junit:junit')
	testCompile('org.mockito:mockito-core:2.12.0')
}

docker {
	baseImage = 'develar/java:latest'
	maintainer = 'Ruben Trancoso <rubentrancoso@gmail.com>'
	registry = 'registry.doteva.com'
}

task buildDocker(type: Docker) {
  push = project.hasProperty('push')
  tag = 'registry.doteva.com/pismo/accounts'
  addFile {
    from jar
    rename {'app.jar'}
  }
  addFile( 'config', '/config' )
  exposePort(8080)
  exposePort(9001)
  entryPoint(['java', '-Djava.security.egd=file:/dev/./urandom', '-jar', '/app.jar'])
}

buildDocker.dependsOn(build)

// https://github.com/junit-team/junit5-samples/blob/master/junit5-gradle-consumer/build.gradle
